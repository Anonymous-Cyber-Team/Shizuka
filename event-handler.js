// event-handler.js

const fs = require("fs");
const path = require("path");

const events = new Map(); // ‡¶∏‡¶¨ ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶∏‡ßá‡¶≠ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá

// === ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡ßã‡¶°‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ===
function loadEvents() {
  const eventFiles = fs
    .readdirSync(path.join(__dirname, "events"))
    .filter((file) => file.endsWith(".js"));

  for (const file of eventFiles) {
    try {
      const event = require(`./events/${file}`);
      if (event.name && event.run) {
        events.set(event.name, event);
        console.log(`[+] ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡ßã‡¶° ‡¶π‡ßü‡ßá‡¶õ‡ßá: ${event.name}`);
      } else {
        console.warn(`[-] "${file}" ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶´‡¶æ‡¶á‡¶≤‡ßá 'name' ‡¶¨‡¶æ 'run' ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶®‡ßá‡¶á‡•§`);
      }
    } catch (error) {
      console.error(`[-] "${file}" ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶ü‡¶ø ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø:`, error);
    }
  }
  console.log(`‚úÖ ‡¶Æ‡ßã‡¶ü ${events.size} ‡¶ü‡¶ø ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶≤‡ßã‡¶° ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§`);
}

// === ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ===
async function handleEvent({ api, message, config, messageCache }) {
  // message.type === 'event' ‡¶è‡¶¨‡¶Ç message.logMessageType ‡¶¶‡ßÅ‡¶ü‡ßã‡¶á ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶Ü‡¶∏‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá
  const eventName = message.logMessageType || message.type;

  const event = events.get(eventName);

  if (event) {
    try {
      // ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø‡¶ï‡ßá ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü ‡¶°‡ßá‡¶ü‡¶æ ‡¶™‡¶æ‡¶∏ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
      await event.run({ api, message, config, messageCache });
      return true; // ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
    } catch (error) {
      console.error(`"${eventName}" ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶ü‡¶ø ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶è‡¶∞‡¶∞ ‡¶π‡ßü‡ßá‡¶õ‡ßá:`, error);
      // ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡¶¶‡ßá‡¶∞ ‡¶è‡¶∞‡¶∞ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® (‡¶ê‡¶ö‡ßç‡¶õ‡¶ø‡¶ï)
      config.ADMIN_IDS.forEach((adminId) => {
        api.sendMessage(
          `üö® ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶è‡¶∞‡¶∞ üö®\n\n‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü: ${eventName}\n‡¶ó‡ßç‡¶∞‡ßÅ‡¶™: ${
            message.threadID
          }\n\n‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ: ${error.message || error}`,
          adminId,
          (err) => {
            if (err)
              console.error(
                `[Event Error Notify] ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ${adminId}-‡¶ï‡ßá ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ`
              );
          }
        );
      });
      return false; // ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶è‡¶∞‡¶∞ ‡¶π‡ßü‡ßá‡¶õ‡ßá
    }
  }

  return false; // ‡¶è‡¶á ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶ï‡ßã‡¶®‡ßã ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø
}

module.exports = {
  loadEvents,
  handleEvent,
};
