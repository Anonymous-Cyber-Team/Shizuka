// commands/help.js
const { commands } = require("../command-handler");

module.exports = {
  config: {
    name: "help",
    aliases: ["h", "cmd", "usercmd"],
    description: "рж╕рж╛ржзрж╛рж░ржг ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржжрзЗрж░ ржЬржирзНржп ржЙржкрж▓ржмрзНржз ржХржорж╛ржирзНржб рждрж╛рж▓рж┐ржХрж╛ред",
    permission: 0,
    cooldown: 5,
    usage: "/help [ржХржорж╛ржирзНржбрзЗрж░ ржирж╛ржо]",
  },
  run: async function ({ api, message, args, config }) {
    const userPrefix = config.BOT_PREFIX || "/";
    const adminPrefix = config.SECRET_ADMIN_PREFIX || "@"; // ржЕрзНржпрж╛ржбржорж┐ржи ржХржорж╛ржирзНржбрзЗрж░ ржкрзНрж░рж┐ржлрж┐ржХрзНрж╕ ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп

    if (args.length > 0) {
      const commandName = args[0].toLowerCase();
      const command = commands.get(commandName);
      // рж╕рж╛ржзрж╛рж░ржг ржЗржЙржЬрж╛рж░ ржЕрзНржпрж╛ржбржорж┐ржи ржХржорж╛ржирзНржбрзЗрж░ рж╣рзЗрж▓рзНржк ржжрзЗржЦрждрзЗ ржкрж╛ржмрзЗ ржирж╛
      if (!command || command.config.permission === 1) {
        return api.sendMessage(
          `тЭУ "${commandName}" ржирж╛ржорзЗ ржХрзЛржирзЛ рж╕рж╛ржзрж╛рж░ржг ржХржорж╛ржирзНржб ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред`,
          message.threadID,
          message.messageID
        );
      }
      // ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕рж╛ржзрж╛рж░ржг ржХржорж╛ржирзНржбрзЗрж░ рж╣рзЗрж▓рзНржк
      let response = `ЁЯУЬ ржХржорж╛ржирзНржб: ${userPrefix}${command.config.name}\n\n`;
      response += `ЁЯУЭ ржмрж░рзНржгржирж╛: ${command.config.description || "N/A"}\n`;
      if (command.config.aliases && command.config.aliases.length > 0) {
        response += `ЁЯУМ ржмрж┐ржХрж▓рзНржк ржирж╛ржо: ${command.config.aliases.join(", ")}\n`;
      }
      response += `тП│ ржХрзБрж▓ржбрж╛ржЙржи: ${command.config.cooldown || 3} рж╕рзЗржХрзЗржирзНржб\n`;
      const usage = command.config.usage
        ? command.config.usage.replace(/^\/\s*/, userPrefix)
        : `${userPrefix}${command.config.name}`;
      response += `ЁЯТб ржмрзНржпржмрж╣рж╛рж░: ${usage}\n`;
      api.sendMessage(response, message.threadID, message.messageID);
    } else {
      // рж╕ржХрж▓ рж╕рж╛ржзрж╛рж░ржг ржХржорж╛ржирзНржбрзЗрж░ рждрж╛рж▓рж┐ржХрж╛
      let response = "тЬи === рж╕рж┐ржЬрзБржХрж╛рж░ рж╕рж╛рж╣рж╛ржпрзНржп ржорзЗржирзБ === тЬи\n\n";
      response += `"${userPrefix}help [ржХржорж╛ржирзНржбрзЗрж░ ржирж╛ржо]" рж▓рж┐ржЦрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржХржорж╛ржирзНржб рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗ ржкрж╛рж░ржмрзЗржиред\n\n`;
      response += "ЁЯУЪ ржЙржкрж▓ржмрзНржз рж╕рж╛ржзрж╛рж░ржг ржХржорж╛ржирзНржбрж╕ржорзВрж╣:\n\n";
      const userCommands = [];
      commands.forEach((command) => {
        if (
          command.config.permission === 0 &&
          !userCommands.some((c) => c.key === command.config.name)
        ) {
          userCommands.push({
            key: command.config.name,
            config: command.config,
          });
        }
      });

      if (userCommands.length === 0) {
        response += "ржЖржкрж╛рждржд ржХрзЛржирзЛ рж╕рж╛ржзрж╛рж░ржг ржХржорж╛ржирзНржб ржирзЗржЗред";
      } else {
        userCommands.sort((a, b) => a.key.localeCompare(b.key));
        userCommands.forEach((cmd) => {
          response += `ЁЯФ╣ ${userPrefix}${cmd.key}\n   тАв ${
            cmd.config.description || "N/A"
          }\n`;
        });
      }
      response += `\n\nЁЯТЦ ржпрзЗржХрзЛржирзЛ ржкрзНрж░рзЯрзЛржЬржирзЗ рж╕рж┐ржЬрзБржХрж╛ржХрзЗ ржирж╛ржо ржзрж░рзЗ ржбрж╛ржХрждрзЗ ржкрж╛рж░рзЗржи!`;
      api.sendMessage(response, message.threadID, message.messageID);
    }
  },
};
