// commands/weather.js

const axios = require("axios");
const { getShizukaReply } = require("../gemini.js");

// ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø (‡¶ï‡¶æ‡¶ï‡ßá ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá)
const locationRequests = new Map();
const REQUEST_TIMEOUT = 2 * 60 * 1000; // ‡ß® ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞ ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤

module.exports = {
  config: {
    name: "weather",
    aliases: ["‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ"],
    description: "‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ‡ßü‡•§",
    permission: 0, // ‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
    cooldown: 10, // ‡ßß‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°
    usage: "/weather [ ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ]",
  },

  run: async function ({ api, message, args, config, commandName }) {
    // <-- commandName ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
    const threadID = message.threadID;
    const senderID = message.senderID;
    const apiKey = config.WEATHER_API_KEY; // config ‡¶•‡ßá‡¶ï‡ßá API Key ‡¶≤‡ßã‡¶°

    if (!apiKey || apiKey === "YOUR_OPENWEATHERMAP_API_KEY") {
      console.warn(
        "[Weather] OpenWeatherMap API Key ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶®‡ßá‡¶á config.json ‡¶è‡•§"
      );
      return api.sendMessage(
        "üò• ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ‡¶ü‡¶ø ‡¶è‡¶ñ‡¶® ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡ßü ‡¶®‡ßá‡¶á‡•§",
        threadID,
        message.messageID
      );
    }

    let location = args.join(" ").trim();

    // ‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡ßü‡ßá ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶®‡¶æ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶è‡¶¨‡¶Ç ‡¶è‡¶á ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶Ü‡¶ó‡ßá ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡¶®‡¶ø
    if (!location && !locationRequests.has(senderID)) {
      // ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
      locationRequests.set(senderID, {
        threadID: threadID,
        timestamp: Date.now(),
      });
      // ‡¶™‡ßÅ‡¶∞‡¶®‡ßã ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ü‡¶æ‡¶á‡¶Æ‡¶æ‡¶∞
      setTimeout(() => {
        if (locationRequests.has(senderID)) {
          locationRequests.delete(senderID);
          // console.log(`[Weather] User ${senderID} ‡¶è‡¶∞ ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶ü‡¶æ‡¶á‡¶Æ‡¶Ü‡¶â‡¶ü‡•§`);
        }
      }, REQUEST_TIMEOUT);
      return api.sendMessage(
        "‚ùì ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßã‡¶® ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶ñ‡¶¨‡¶∞ ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶ö‡¶æ‡¶®? üòä",
        threadID,
        message.messageID
      );
    }

    // ‡¶Ø‡¶¶‡¶ø ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶•‡¶æ‡¶ï‡ßá (‡¶Ö‡¶•‡¶¨‡¶æ ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶∏‡ßá)
    if (location) {
      locationRequests.delete(senderID); // ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶õ‡ßá, ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠
      try {
        console.log(`[Weather] "${location}" ‡¶è‡¶∞ ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...`);
        // OpenWeatherMap API ‡¶ï‡¶≤ (Current Weather Data)
        const response = await axios.get(
          `https://api.openweathermap.org/data/2.5/weather`,
          {
            params: {
              q: location,
              appid: apiKey,
              units: "metric", // ‡¶∏‡ßá‡¶≤‡¶∏‡¶ø‡¶Ø‡¶º‡¶æ‡¶∏ ‡¶§‡¶æ‡¶™‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡¶æ
              lang: "bn", // ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶§‡ßá ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ (‡¶Ø‡¶¶‡¶ø ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßá)
            },
          }
        );

        const weatherData = response.data;

        if (!weatherData || !weatherData.main || !weatherData.weather) {
          throw new Error("API ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶°‡ßá‡¶ü‡¶æ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§");
        }

        const description = weatherData.weather[0]?.description || "N/A";
        const temp = weatherData.main.temp;
        const feelsLike = weatherData.main.feels_like;
        const humidity = weatherData.main.humidity;
        const windSpeed = weatherData.wind?.speed || "N/A"; // ‡¶Æ‡¶ø‡¶ü‡¶æ‡¶∞/‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°
        const cityName = weatherData.name;
        const country = weatherData.sys?.country || "";

        // AI-‡¶ï‡ßá ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶®‡ßã
        const weatherPrompt = `
[‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶®‡ßã‡¶ü: ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶°‡ßá‡¶ü‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá "${cityName}, ${country}" ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§ (‡ß®-‡ß© ‡¶≤‡¶æ‡¶á‡¶®) ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ ‡¶¶‡¶æ‡¶ì‡•§ ‡¶∂‡¶ø‡¶ú‡ßÅ‡¶ï‡¶æ‡¶∞ ‡¶Æ‡¶ø‡¶∑‡ßç‡¶ü‡¶ø ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶§‡ßç‡¶¨ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá‡•§]
‡¶¨‡¶ø‡¶¨‡¶∞‡¶£: ${description}
‡¶§‡¶æ‡¶™‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡¶æ: ${temp}¬∞C
‡¶Ö‡¶®‡ßÅ‡¶≠‡ßÇ‡¶§ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: ${feelsLike}¬∞C
‡¶Ü‡¶∞‡ßç‡¶¶‡ßç‡¶∞‡¶§‡¶æ: ${humidity}%
‡¶¨‡¶æ‡¶§‡¶æ‡¶∏: ${windSpeed} m/s
`;
        const weatherReport = await getShizukaReply(
          `WEATHER_REPORT_${threadID}`,
          weatherPrompt
        ); // ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶•‡ßç‡¶∞‡ßá‡¶° ‡¶Ü‡¶á‡¶°‡¶ø
        api.sendMessage(weatherReport, threadID, message.messageID);
      } catch (error) {
        console.error(
          `[Weather] "${location}" ‡¶è‡¶∞ ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:`,
          error.response?.data?.message || error.message
        );
        if (error.response?.status === 404) {
          api.sendMessage(
            `üò• "${location}" ‡¶®‡¶æ‡¶Æ‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§ ‡¶®‡¶æ‡¶Æ‡¶ü‡¶ø ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá ‡¶§‡ßã?`,
            threadID,
            message.messageID
          );
        } else if (error.response?.status === 401) {
          console.error("[Weather] API Key ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ!");
          api.sendMessage(
            "üò• ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§",
            threadID,
            message.messageID
          );
        } else {
          api.sendMessage(
            "üò• ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶§‡ßá ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§",
            threadID,
            message.messageID
          );
        }
      }
    }
    // ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü‡¶®‡¶ø ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ü‡¶ó‡ßá ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡¶ø‡¶≤ (‡¶è‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø handleReply ‡¶è ‡¶ï‡¶≤ ‡¶π‡¶¨‡ßá)
    // else { /* Do nothing here, wait for reply */ }
  },

  // ‡¶ì‡ßü‡ßá‡¶¶‡¶æ‡¶∞ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø (index.js ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶π‡¶¨‡ßá)
  handleReply: async function ({ api, message, config }) {
    const senderID = message.senderID;

    // ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶á ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡¶ø‡¶≤
    if (locationRequests.has(senderID)) {
      const requestData = locationRequests.get(senderID);
      // ‡¶Ø‡¶¶‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶Ü‡¶∏‡ßá
      if (message.threadID === requestData.threadID) {
        const providedLocation = message.body.trim();
        if (providedLocation) {
          // ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶õ‡ßá, run ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶∏‡¶π
          console.log(
            `[Weather Reply] ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ${senderID} ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶¶‡¶ø‡ßü‡ßá‡¶õ‡ßá: ${providedLocation}`
          );
          // ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá run ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá‡¶á
          await this.run({
            api,
            message,
            args: providedLocation.split(" "),
            config,
            commandName: this.config.name,
          }); // run ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ
          return true; // ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
        } else {
          api.sendMessage(
            "‚ùì ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ‡¶ü‡¶ø ‡¶¨‡¶≤‡ßÅ‡¶®‡•§",
            message.threadID,
            message.messageID
          );
          return true; // ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá (‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡ßá)
        }
      }
    }
    return false; // ‡¶è‡¶ü‡¶ø ‡¶ì‡ßü‡ßá‡¶¶‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶®‡ßü
  },
};
