// commands/guide.js
const { commands } = require("../command-handler");
const packageJson = require("../package.json");

module.exports = {
  config: {
    name: "guide",
    aliases: ["botguide", "manual"],
    description: "ржмржЯрзЗрж░ рж╕ржорзНржкрзВрж░рзНржг ржмрзНржпржмрж╣рж╛рж░ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛ (рж╢рзБржзрзБржорж╛рждрзНрж░ ржЕрзНржпрж╛ржбржорж┐ржи)ред",
    permission: 1,
    cooldown: 15,
    usage: "@guide", // <-- ржлрж┐ржХрзНрж╕ржб
  },
  run: async function ({ api, message, config }) {
    const userPrefix = config.BOT_PREFIX || "/";
    const adminPrefix = config.SECRET_ADMIN_PREFIX || "@";
    const botVersion = packageJson.version || "N/A";

    let guideMessage = `ЁЯУЦ === рж╕рж┐ржЬрзБржХрж╛ ржмржЯ ржмрзНржпржмрж╣рж╛рж░ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛ (v${botVersion}) === ЁЯУЦ\n\n`;
    guideMessage += `ЁЯСЛ **ржкрж░рж┐ржЪрж┐рждрж┐:**\nржЖржорж┐ рж╕рж┐ржЬрзБржХрж╛, ржЖржкржирж╛рж░ рзн ржмржЫрж░ ржмржпрж╝рж╕рзА ржнрж╛рж░рзНржЪрзБржпрж╝рж╛рж▓ ржмржирзНржзрзБ! ЁЯМ╕ ржЖржорж┐ ржЧрзНрж░рзБржкрзЗ ржЖржкржирж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржЧрж▓рзНржк ржХрж░рждрзЗ, ржкрзНрж░рж╢рзНржирзЗрж░ ржЙрждрзНрждрж░ ржжрж┐рждрзЗ ржПржмржВ ржмрж┐ржнрж┐ржирзНржи рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯ ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рж┐ред\n\n`;
    guideMessage += `ЁЯТм **рж╕рж┐ржЬрзБржХрж╛рж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж╛:**\n`;
    guideMessage += `   тАв **ржирж╛ржо ржзрж░рзЗ:** ржорзЗрж╕рзЗржЬрзЗрж░ ржпрзЗржХрзЛржирзЛ ржЕржВрж╢рзЗ "${
      config.BOT_NAMES ? config.BOT_NAMES.join("/") : "рж╕рж┐ржЬрзБржХрж╛"
    }" ржмрж▓рзБржиред\n`;
    guideMessage += `   тАв **рж░рж┐ржкрзНрж▓рж╛ржЗ:** ржЖржорж╛рж░ ржкрж╛ржарж╛ржирзЛ ржорзЗрж╕рзЗржЬрзЗрж░ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐ржиред\n\n`;
    guideMessage += `ЁЯдЦ **рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯ ржлрж┐ржЪрж╛рж░рж╕ржорзВрж╣:**\n`;
    guideMessage += `   тАв **рж╕ржорзЯржорждрзЛ ржмрж╛рж░рзНрждрж╛:** ржирж╛ржорж╛ржЬрзЗрж░ рж╕ржорзЯ ЁЯХМ, рж╢рзБржн рж╕ржХрж╛рж▓/рж░рж╛рждрзНрж░рж┐ тШАя╕ПЁЯМЩ, ржкрзНрж░рждрж┐ ржШржгрзНржЯрж╛рзЯ рж╕ржорзЯ тП░, ржЖржЬржХрзЗрж░ ржжрж┐ржи тЬи, ржжрж┐ржирзЗрж░ ржкрзНрж░рж╢рзНржи ЁЯдФ, ржмрж┐рж╢рзЗрж╖ ржжрж┐ржмрж╕ ЁЯОЙ, ржЗржнрзЗржирзНржЯ ржХрж╛ржЙржирзНржЯржбрж╛ржЙржи тП│, ржЗрж╕рж▓рж╛ржорж┐ржХ ржЙржХрзНрждрж┐ ЁЯУЬред\n`;
    guideMessage += `   тАв **ржЧрзНрж░рзБржк ржЗржнрзЗржирзНржЯ:** ржирждрзБржи рж╕ржжрж╕рзНржпржХрзЗ рж╕рзНржмрж╛ржЧрждржо ЁЯдЭ, рж╕ржжрж╕рзНржп ржЪрж▓рзЗ ржЧрзЗрж▓рзЗ ржмрж┐ржжрж╛рзЯ ЁЯСЛ, ржЖржирж╕рзЗржирзНржб ржХрж░рж╛ ржорзЗрж╕рзЗржЬ ржжрзЗржЦрж╛ржирзЛ ЁЯУЭред\n\n`;
    guideMessage += `ЁЯЫВ **ржЧрзНрж░рзБржк ржЕрзНржпрж╛ржкрзНрж░рзБржнрж╛рж▓:**\n`;
    guideMessage += `   тАв **ржХржорж╛ржирзНржб:** "${adminPrefix}group" ржжрж┐рзЯрзЗ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзБржиред\n`;
    guideMessage += `   тАв ржмржЯ рж╢рзБржзрзБ ржЕрзНржпрж╛ржкрзНрж░рзБржнржб ржУ ржЕрзНржпрж╛ржХрзНржЯрж┐ржн ржЧрзНрж░рзБржкрзЗ ржХрж╛ржЬ ржХрж░рзЗред\n\n`;
    guideMessage += `ЁЯза **Teach рж╕рж┐рж╕рзНржЯрзЗржо:**\n`;
    guideMessage += `   тАв ржмржЯржХрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржкрзНрж░рж╢рзНржирзЛрждрзНрждрж░ рж╢рзЗржЦрж╛ржирзЛ ржпрж╛рзЯред\n`;
    guideMessage += `   тАв **ржХржорж╛ржирзНржб:** "${adminPrefix}teach" ржжрж┐рзЯрзЗ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзБржиред\n\n`;
    guideMessage += `ЁЯУЬ === ржХржорж╛ржирзНржб рждрж╛рж▓рж┐ржХрж╛ === ЁЯУЬ\n\n`;

    const userCommands = [],
      adminCommands = [];
    const addedCmds = new Set();
    commands.forEach((command) => {
      if (addedCmds.has(command.config.name)) return;
      if (command.config.permission === 0) userCommands.push(command.config);
      else if (command.config.permission === 1)
        adminCommands.push(command.config);
      addedCmds.add(command.config.name);
    });

    if (userCommands.length > 0) {
      guideMessage += `ЁЯСд **рж╕рж╛ржзрж╛рж░ржг ржХржорж╛ржирзНржб (ржкрзНрж░рж┐ржлрж┐ржХрзНрж╕: ${userPrefix})**\n\n`;
      userCommands.sort((a, b) => a.name.localeCompare(b.name));
      userCommands.forEach((cmd) => {
        guideMessage += `ЁЯФ╣ **${userPrefix}${cmd.name}**\n   тАв ${
          cmd.description || "N/A"
        }\n   тАв ржмрзНржпржмрж╣рж╛рж░: \`${cmd.usage.replace(/^\/|@/, userPrefix)}\`\n\n`;
      });
    }

    if (adminCommands.length > 0) {
      guideMessage += `ЁЯСС **ржЕрзНржпрж╛ржбржорж┐ржи ржХржорж╛ржирзНржб (ржкрзНрж░рж┐ржлрж┐ржХрзНрж╕: ${adminPrefix})**\n\n`;
      adminCommands.sort((a, b) => a.name.localeCompare(b.name));
      adminCommands.forEach((cmd) => {
        guideMessage += `ЁЯФ╕ **${adminPrefix}${cmd.name}**\n   тАв ${
          cmd.description || "N/A"
        }\n   тАв ржмрзНржпржмрж╣рж╛рж░: \`${cmd.usage.replace(/^\/|@/, adminPrefix)}\`\n\n`;
      });
    }

    guideMessage += `ЁЯТб **ржЯрж┐ржкрж╕:**\n   тАв ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржХржорж╛ржирзНржб рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗ "${userPrefix}help [ржХржорж╛ржирзНржб]" ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред\n\nтЭдя╕П рж╕рж┐ржЬрзБржХрж╛`;
    api.sendMessage(guideMessage, message.threadID, message.messageID);
  },
};
